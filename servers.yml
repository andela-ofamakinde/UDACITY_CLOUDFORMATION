Description: >
    Olatoyosi Famakinde / Udacity

Parameters:

    EnvironmentName:
        Description: An envirionment name that will be prefixed to resoureces
        Type: String

Resources:
    ProfileWithRolesForOurApp:
        Type: AWS::IAM::InstanceProfile
        Properties:
            Roles:
              - UdagramS3ReadOnlyEC2
              
    LBSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http to load balancer host
            VpcId:
              Fn::ImportValue:
                !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            - IpProtocol: tcp
              FromPort: 8080
              ToPort: 8080
              CidrIp: 0.0.0.0/0	
              
    WebServerSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http to and from load balancer
            VpcId:
              Fn::ImportValue:
                !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 0
              ToPort: 65535
              CidrIp: 0.0.0.0/0
              
    WebAppLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
          UserData:
            Fn::Base64: !Sub |
                #!/bin/bash
                apt-get update -y
                apt-get install unzip awscli -y
                apt-get install apache2 -y
                systemctl start apache2.service
                cd /var/www/html
                aws s3 cp s3://udagram-udacity-project/index.html /var/www/html
          ImageId: ami-08edb3f0e9f3f2557
          IamInstanceProfile: !Ref ProfileWithRolesForOurApp
          SecurityGroups:
          - Ref: WebServerSecurityGroup
          InstanceType: t3.medium
          BlockDeviceMappings:
          - DeviceName: "/dev/sdk"
            Ebs:
              VolumeSize: '10'
                   
    WebAppGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            VPCZoneIdentifier:
            - Fn::ImportValue:
                !Sub "${EnvironmentName}-PRIV-NETS"
            LaunchConfigurationName:
              Ref: WebAppLaunchConfig
            MinSize: "2"
            MaxSize: "4"
            TargetGroupARNs:
            - Ref: WebAppTargetGroup
            
    WebAppLB:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties: 
            Subnets:
            - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
            - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
            SecurityGroups:
            - Ref: LBSecurityGroup   
                
    Listener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            DefaultActions:
            - Type: forward
              TargetGroupArn: 
                Ref: 'WebAppTargetGroup'
            LoadBalancerArn: 
              Ref: WebAppLB
            Port: 80
            Protocol: HTTP
            
    ALBListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule   
        Properties:
            Actions:
            - Type: forward
              TargetGroupArn: !Ref 'WebAppTargetGroup' 
            Conditions:
            - Field: path-pattern
              Values: [/]
            ListenerArn: !Ref 'Listener' 
            Priority: 1
                  
    WebAppTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            HealthCheckIntervalSeconds: 35
            HealthCheckPath: /
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 30
            HealthyThresholdCount: 2
            Port: 80
            Protocol: HTTP
            UnhealthyThresholdCount: 5
            VpcId: 
                Fn::ImportValue:
                    Fn::Sub: "${EnvironmentName}-VPCID"
        
Outputs:
    WebAppLoadBalancerURL:
        Description: Load Balancer URL
        Value: !Join [ "", [ 'http://', !GetAtt WebAppLB.DNSName ]]
        Export:
            Name: !Sub ${EnvironmentName}-LB-URL